/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package java_assginment;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author thong
 */
public class Purchase_Manager_page extends javax.swing.JFrame {

    
    private static final String FILE_Requisitions = "src/User_data/Requisitions.txt";
    private static final String FILE_Supplier = "src/User_data/Supplier_data.txt";
    private static final String FILE_PurchaseOrder = "src/User_data/PurchaseOrders.txt";
    private static final String FILE_Item_Inventory = "src/User_data/ItemInventory.txt";


    /**
     * Creates new form Purchase_Manager_page
     */
    public Purchase_Manager_page() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Delete = new javax.swing.JButton();
        Add = new javax.swing.JButton();
        Save = new javax.swing.JButton();
        Manage_Purchase_Orders = new javax.swing.JButton();
        View_Items = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Sale_manager_Table = new javax.swing.JTable();
        Views_Supplier = new javax.swing.JButton();
        View_Requisitions = new javax.swing.JButton();
        Edit = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 255, 153));

        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        Add.setText("Add");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });

        Save.setText("Save");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });

        Manage_Purchase_Orders.setText("Manage Purchase Orders");
        Manage_Purchase_Orders.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Manage_Purchase_OrdersActionPerformed(evt);
            }
        });

        View_Items.setText("View Items ");
        View_Items.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                View_ItemsActionPerformed(evt);
            }
        });

        Sale_manager_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Sale_manager_Table);

        Views_Supplier.setText("Views Supplier");
        Views_Supplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Views_SupplierActionPerformed(evt);
            }
        });

        View_Requisitions.setText("View Requisitions");
        View_Requisitions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                View_RequisitionsActionPerformed(evt);
            }
        });

        Edit.setText("Edit");
        Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Add)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Edit)
                        .addGap(38, 38, 38)
                        .addComponent(Save))
                    .addComponent(Delete)
                    .addComponent(View_Items)
                    .addComponent(Views_Supplier)
                    .addComponent(View_Requisitions)
                    .addComponent(Manage_Purchase_Orders))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(View_Items)
                        .addGap(18, 18, 18)
                        .addComponent(Views_Supplier)
                        .addGap(32, 32, 32)
                        .addComponent(View_Requisitions)
                        .addGap(27, 27, 27)
                        .addComponent(Manage_Purchase_Orders)
                        .addGap(18, 18, 18)
                        .addComponent(Add)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Edit)
                            .addComponent(Save))
                        .addGap(27, 27, 27)
                        .addComponent(Delete)))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(153, 255, 153));

        jLabel1.setText("Supplier Name:");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Type of item");

        jLabel3.setText("Quantity");

        jLabel4.setText("Unit price");

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                            .addComponent(jTextField1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jTextField3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField2)
                                .addGap(207, 207, 207))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(188, 188, 188))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(261, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(102, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void View_ItemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_View_ItemsActionPerformed
        // TODO add your handling code here:
    // Create a File object for the requisitions file
    File requisitionsFile = new File(FILE_Item_Inventory);

    // Check if the file exists
    if (requisitionsFile.exists()) {
        try (BufferedReader br = new BufferedReader(new FileReader(requisitionsFile))) {
            String line = br.readLine(); // Read the header
            if (line != null) {
                // Split the header line for column names
                String[] headers = line.split(",");
                
                // Create a DefaultTableModel with headers
                DefaultTableModel model = new DefaultTableModel(headers, 0); 

                // Read each line and add it to the table model
                while ((line = br.readLine()) != null) {
                    String[] row = line.split(","); // Split each row by commas
                    model.addRow(row); // Add row to the model
                }

                // Set the model to the Sale_manager_Table (JTable)
                Sale_manager_Table.setModel(model);
            }
        } catch (IOException e) {
            // Handle exceptions when reading the file
            JOptionPane.showMessageDialog(this, "Error reading requisitions data: " + e.getMessage());
        }
    } else {
        // If the file does not exist, show an error message
        JOptionPane.showMessageDialog(this, "Requisitions file not found.");
    }
    
        
    }//GEN-LAST:event_View_ItemsActionPerformed

    private void Views_SupplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Views_SupplierActionPerformed
    // Create a File object for the suppliers file
    File suppliersFile = new File(FILE_Supplier);

    // Check if the file exists
    if (suppliersFile.exists()) {
        try (BufferedReader br = new BufferedReader(new FileReader(suppliersFile))) {
            String line = br.readLine(); // Read the header
            if (line != null) {
                // Split the header line for column names
                String[] headers = line.split(",");
                
                // Create a DefaultTableModel with headers
                DefaultTableModel model = new DefaultTableModel(headers, 0);

                // Read each line and add it to the table model
                while ((line = br.readLine()) != null) {
                    String[] row = line.split(","); // Split each row by commas
                    model.addRow(row); // Add row to the model
                }

                // Set the model to the Sale_manager_Table (JTable)
                Sale_manager_Table.setModel(model);
            }
        } catch (IOException e) {
            // Handle exceptions when reading the file
            JOptionPane.showMessageDialog(this, "Error reading suppliers data: " + e.getMessage());
        }
    } else {
        // If the file does not exist, show an error message
        JOptionPane.showMessageDialog(this, "Suppliers file not found.");
    }  
    
    }//GEN-LAST:event_Views_SupplierActionPerformed

    private void View_RequisitionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_View_RequisitionsActionPerformed
    // Create a File object for the requisitions file
    File requisitionsFile = new File(FILE_Requisitions);

    // Check if the file exists
    if (requisitionsFile.exists()) {
        try (BufferedReader br = new BufferedReader(new FileReader(requisitionsFile))) {
            String line = br.readLine(); // Read the header
            if (line != null) {
                // Split the header line for column names
                String[] headers = line.split(",");
                
                // Create a DefaultTableModel with headers
                DefaultTableModel model = new DefaultTableModel(headers, 0); 

                // Read each line and add it to the table model
                while ((line = br.readLine()) != null) {
                    String[] row = line.split(","); // Split each row by commas
                    model.addRow(row); // Add row to the model
                }

                // Set the model to the Sale_manager_Table (JTable)
                Sale_manager_Table.setModel(model);
            }
        } catch (IOException e) {
            // Handle exceptions when reading the file
            JOptionPane.showMessageDialog(this, "Error reading requisitions data: " + e.getMessage());
        }
    } else {
        // If the file does not exist, show an error message
        JOptionPane.showMessageDialog(this, "Requisitions file not found.");
    }

    
    
    }//GEN-LAST:event_View_RequisitionsActionPerformed

    private void EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditActionPerformed
        int selectedRow = Sale_manager_Table.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a row to edit.");
            return;
        }
        Sale_manager_Table.editCellAt(selectedRow, 0); // Puts the first cell in edit mode

    }//GEN-LAST:event_EditActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        int selectedRow = Sale_manager_Table.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) Sale_manager_Table.getModel();
        model.removeRow(selectedRow); // Remove the selected row

    }//GEN-LAST:event_DeleteActionPerformed

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed

        DefaultTableModel model = (DefaultTableModel) Sale_manager_Table.getModel();
        model.addRow(new Object[]{"", "", "", ""}); // Add an empty row with four columns
    }//GEN-LAST:event_AddActionPerformed

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        File itemsFile = new File(FILE_PurchaseOrder);
        try (BufferedWriter bw = new BufferedWriter(new FileWriter(itemsFile))) {
            DefaultTableModel model = (DefaultTableModel) Sale_manager_Table.getModel();
            // Write the header
            for (int col = 0; col < model.getColumnCount(); col++) {
                bw.write(model.getColumnName(col) + (col == model.getColumnCount() - 1 ? "\n" : ","));
            }
            // Write each row
            for (int row = 0; row < model.getRowCount(); row++) {
                for (int col = 0; col < model.getColumnCount(); col++) {
                    bw.write(model.getValueAt(row, col) + (col == model.getColumnCount() - 1 ? "\n" : ","));
                }
            }
            JOptionPane.showMessageDialog(this, "Data saved successfully.");
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error saving data: " + e.getMessage());
        }

    }//GEN-LAST:event_SaveActionPerformed

    private void Manage_Purchase_OrdersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Manage_Purchase_OrdersActionPerformed
        // TODO add your handling code here:
    // Setup headers and initialize table model
    String[] headers = {"Order ID", "Supplier Name", "Order Date", "Status"};
    DefaultTableModel model = new DefaultTableModel(headers, 0);
    File ordersFile = new File("src/User_data/PurchaseOrders.txt");

    }//GEN-LAST:event_Manage_Purchase_OrdersActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Purchase_Manager_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Purchase_Manager_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Purchase_Manager_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Purchase_Manager_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Purchase_Manager_page().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JButton Delete;
    private javax.swing.JButton Edit;
    private javax.swing.JButton Manage_Purchase_Orders;
    private javax.swing.JTable Sale_manager_Table;
    private javax.swing.JButton Save;
    private javax.swing.JButton View_Items;
    private javax.swing.JButton View_Requisitions;
    private javax.swing.JButton Views_Supplier;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
